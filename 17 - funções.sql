
-- FUNÇÃO ESCALAR (RETORNA UM VALOR ÚNICO, DEFINIDO PELA CLÁUSUAL RETURNS. PODE SER SIMPLES, O VALOR ESCALAR RETORNADO
-- É RESULTADO DE UMA INSTRUÇÃO ÚNICA.

-- EX: CRIAR UMA FUNÇÃO QUE RETORNA O FATURAMENTO POR NÚMERO DE PEDIDO

SELECT  SUM(Quantidade * Preco) FATURAMENTO FROM TB_DETALHE_PEDIDO
WHERE NumeroPedido = 10249

CREATE FUNCTION FaturamentoDetalhePedido (@NUM_PEDIDO AS INT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @FATURAMENTO FLOAT;
	SELECT @FATURAMENTO = SUM(Quantidade * Preco) FROM TB_DETALHE_PEDIDO
	WHERE NumeroPedido = @NUM_PEDIDO
	RETURN @FATURAMENTO;

END

SELECT NumeroPedido, dbo.FaturamentoDetalhePedido(NumeroPedido) AS FATURAMENTO FROM TB_PEDIDO


-- FUNÇÃO TABULAR (USA A CLAUSULA SELECT PARA RETORNAR OS RESULTADOS EM FORMA DE TABELA)

-- EX: LISTAR TODOS PEDIDOS DE UM DETERMINADO CLIENTE PELO ID


CREATE FUNCTION ListarPedidosCliente (@CLIENTE_ID AS VARCHAR(15))
RETURNS TABLE 
AS 
RETURN SELECT * FROM TB_PEDIDO WHERE ClienteId = @CLIENTE_ID;

SELECT DISTINCT C1.ClienteId,
		C1.TOTAL_PEDIDOS,
		C2.TOTAL_FATURAMENTO
FROM
(SELECT ClienteId,
		(SELECT COUNT(*) FROM ListarPedidosCliente(ClienteId)) AS TOTAL_PEDIDOS
	FROM TB_PEDIDO) AS C1

INNER JOIN

(SELECT ClienteId,
		SUM(dbo.FaturamentoDetalhePedido(NumeroPedido)) as TOTAL_FATURAMENTO
	FROM TB_PEDIDO
	GROUP BY ClienteId) AS C2
ON C1.ClienteId = C2.ClienteId

























































